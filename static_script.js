// –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è Service Worker
if ('serviceWorker' in navigator) {
    window.addEventListener('load', () => {
        navigator.serviceWorker.register('/static/service-worker.js')
            .then(reg => console.log('Service Worker –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ'))
            .catch(err => console.log('–ü–æ–º–∏–ª–∫–∞ Service Worker:', err));
    });
}

// –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
document.addEventListener('DOMContentLoaded', () => {
    const background = localStorage.getItem('background') || 'default';
    const region = localStorage.getItem('region') || '–£–∫—Ä–∞—ó–Ω–∞';
    applyBackground(background);
    if (document.getElementById('region')) {
        document.getElementById('region').value = region;
    }
    if (document.getElementById('background')) {
        document.getElementById('background').value = background;
    }
});

// –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è —Ñ–æ–Ω—É
function applyBackground(background) {
    document.body.className = '';
    if (background !== 'default') {
        document.body.classList.add(`bg-${background}`);
    }
}

// –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
function saveSettings() {
    const background = document.getElementById('background').value;
    const region = document.getElementById('region').value;
    localStorage.setItem('background', background);
    localStorage.setItem('region', region);
    applyBackground(background);
    alert('–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ!');
}

// –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó
function getLocation() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(async (position) => {
            const { latitude, longitude } = position.coords;
            const response = await fetch(`https://nominatim.openstreetmap.org/reverse?lat=${latitude}&lon=${longitude}&format=json&addressdetails=1`);
            const data = await response.json();
            let city = data.address.city || data.address.town || data.address.village || '';
            if (city) {
                document.getElementById('city').value = city;
            } else {
                alert('–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –º—ñ—Å—Ç–æ. –í–≤–µ–¥—ñ—Ç—å –≤—Ä—É—á–Ω—É.');
            }
        }, (error) => {
            alert('–ü–æ–º–∏–ª–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó: ' + error.message);
        });
    } else {
        alert('–ì–µ–æ–ª–æ–∫–∞—Ü—ñ—è –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è –≤–∞—à–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º.');
    }
}

// –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≥–æ–¥–∏
async function getWeather() {
    const city = document.getElementById('city').value;
    const water_type = document.getElementById('water_type').value;
    const region = localStorage.getItem('region') || '–£–∫—Ä–∞—ó–Ω–∞';
    if (!city) {
        alert('–í–≤–µ–¥–∏ –º—ñ—Å—Ç–æ!');
        return;
    }
    if (!navigator.onLine) {
        const lastWeather = JSON.parse(localStorage.getItem('lastWeather'));
        if (lastWeather) {
            document.getElementById('result').innerHTML = `
                üå°Ô∏è –û—Ñ–ª–∞–π–Ω-–¥–∞–Ω—ñ: ${lastWeather.temp}¬∞C<br>
                üíß –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–¥–∏: ${lastWeather.water_temp}¬∞C
            `;
        } else {
            document.getElementById('result').innerHTML = '‚ùå –ù–µ–º–∞—î –æ—Ñ–ª–∞–π–Ω-–¥–∞–Ω–∏—Ö';
        }
        return;
    }
    const response = await fetch('/get_weather', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ city: `${city},${region}`, water_type, user_id: 'web_user' })
    });
    const data = await response.json();
    const resultDiv = document.getElementById('result');
    if (data.error) {
        resultDiv.innerHTML = `‚ùå –ü–æ–º–∏–ª–∫–∞: ${data.error}`;
    } else {
        resultDiv.innerHTML = `
            üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${data.temp}¬∞C<br>
            üíß –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–¥–∏: ${data.water_temp}¬∞C<br>
            ‚òÅÔ∏è –ü–æ–≥–æ–¥–∞: ${data.desc}<br>
            üìä –¢–∏—Å–∫: ${data.pressure} hPa (–∑–º—ñ–Ω–∞: ${data.pressure_change} hPa)
        `;
        localStorage.setItem('lastWeather', JSON.stringify(data));
    }
}

// –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–µ—Ü–µ–ø—Ç—É
async function getRecipe() {
    const fish = document.getElementById('fish').value;
    const response = await fetch('/get_recipe', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ fish, user_id: 'web_user' })
    });
    const data = await response.json();
    const resultDiv = document.getElementById('result');
    if (data.error) {
        resultDiv.innerHTML = `‚ùå –ü–æ–º–∏–ª–∫–∞: ${data.error}`;
    } else {
        resultDiv.innerHTML = `üç≤ –†–µ—Ü–µ–ø—Ç –¥–ª—è ${fish}:<br>${data.recipe}`;
    }
}